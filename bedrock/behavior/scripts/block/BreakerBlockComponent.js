import{getNeighborUpdate}from"../utils.js";const EXCLUDE=["minecraft:bedrock"];export class BreakerBlockComponent{constructor(e="breaker:powered"){this.poweredState=e,this.onTick=this.onTick.bind(this)}breakBlock(e,t){var o;switch(t){case"up":o=e.block.below();break;case"down":o=e.block.above();break;case"north":o=e.block.south();break;case"south":o=e.block.north();break;case"east":o=e.block.west();break;case"west":o=e.block.east();break;default:return}o.isAir||o.isLiquid||EXCLUDE.includes(o.typeId)||e.dimension.runCommand(`setblock ${o.location.x} ${o.location.y} ${o.location.z} air destroy`)}onTick(e){const t=getNeighborUpdate(e);if(t){const o=t.getRedstonePower();null!=o&&e.block.setPermutation(e.block.permutation.withState(this.poweredState,0!=o))}if(!e.block.permutation.getState(this.poweredState))return;const o=e.block.permutation.getState("minecraft:facing_direction");this.breakBlock(e,o)}}